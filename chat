using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using System.Net.Http;
using System.Text;
using System.Text.Json;
using System.Threading.Tasks;

namespace YourNamespace.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class YourController : ControllerBase
    {
        private readonly IHttpContextAccessor _httpContextAccessor;

        public YourController(IHttpContextAccessor httpContextAccessor)
        {
            _httpContextAccessor = httpContextAccessor;
        }

        [HttpPost]
        public async Task<IActionResult> Post([FromBody] RequestModel model)
        {
            string apiKey = "YOUR_API_KEY";
            string endpoint = "https://api.openai.com/v1/engines/davinci-codex/completions";
            string prompt = model.Prompt;
            int maxTokens = 50;
            double temperature = 0.5;

            var generatedText = await GenerateText(apiKey, endpoint, prompt, maxTokens, temperature);

            return Ok(generatedText);
        }

        private async Task<string> GenerateText(string apiKey, string endpoint, string prompt, int maxTokens, double temperature)
        {
            using (HttpClient client = new HttpClient())
            {
                client.DefaultRequestHeaders.Add("Authorization", $"Bearer {apiKey}");

                var requestData = new
                {
                    prompt = prompt,
                    max_tokens = maxTokens,
                    temperature = temperature
                };

                var jsonContent = new StringContent(
                    JsonSerializer.Serialize(requestData),
                    Encoding.UTF8,
                    "application/json"
                );

                var response = await client.PostAsync(endpoint, jsonContent);

                if (response.IsSuccessStatusCode)
                {
                    var responseBody = await response.Content.ReadAsStringAsync();
                    // 解析并提取生成的文本
                    var generatedText = JsonDocument.Parse(responseBody)
                        .RootElement.GetProperty("choices")[0].GetProperty("text").GetString();

                    return generatedText;
                }
                else
                {
                    return string.Empty;
                }
            }
        }
    }

    public class RequestModel
    {
        public string Prompt { get; set; }
    }
}
